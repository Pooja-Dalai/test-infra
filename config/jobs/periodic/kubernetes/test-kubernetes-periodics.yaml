periodics:
  - name: periodic-kubernetes-containerd-e2e-node-tests-ppc64le
    labels:
      preset-golang-build: "true"
      preset-ssh-bot: "true"
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: ppc64le-kubernetes
        path_strategy: explicit
      gcs_credentials_secret: gcs-credentials
      timeout: 2h
    cron: "0 3/3 * * *"
    extra_refs:
      - base_ref: main
        org: kubernetes-sigs
        repo: provider-ibmcloud-test-infra
        workdir: true
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241021-d3a4913879-1.31
          resources:
            requests:
              cpu: "1500m"
            limits:
              cpu: "1500m"
          command:
            - /bin/bash
          args:
            - -c
            - |
              set -o errexit
              set -o nounset
              set -o pipefail
              set -o xtrace

              export PATH=$GOPATH/bin:$PATH
              export GO111MODULE=on


              make install-deployer-tf

              TF_LATEST="v1.9.8"

              curl -fsSL https://releases.hashicorp.com/terraform/${TF_LATEST:1}/terraform_${TF_LATEST:1}_linux_amd64.zip -o ./terraform.zip
              unzip -o ./terraform.zip  >/dev/null 2>&1
              rm -f ./terraform.zip
              TF="$PWD/terraform"
              export PATH=$PWD:$PATH

              apt-get update && apt-get install -y ansible

              TIMESTAMP=$(date +%s)
              K8S_BUILD_VERSION=$(curl https://storage.googleapis.com/k8s-release-dev/ci/latest.txt)
              jq --arg key0 'k8s-build-version' --arg value0 $K8S_BUILD_VERSION '. | .[$key0]=$value0' <<<'{}' > $ARTIFACTS/metadata.json

              # kubectl needed for the e2e tests
              curl -sSL https://dl.k8s.io/ci/$K8S_BUILD_VERSION/bin/linux/`go env GOARCH`/kubectl > /usr/local/bin/kubectl
              chmod +x /usr/local/bin/kubectl

              set +o errexit
              kubetest2 tf --powervs-dns k8s-tests \
                --powervs-image-name CentOS-Stream-9 \
                --powervs-region syd --powervs-zone syd05 \
                --powervs-service-id c3f5354a-517e-4927-8523-890c4bf3d6c5 \
                --powervs-ssh-key powercloud-bot-key \
                --ssh-private-key /etc/secret-volume/ssh-privatekey \
                --cluster-name config3-$TIMESTAMP \
                --up --set-kubeconfig=false --auto-approve \
                --build-version $K8S_BUILD_VERSION --retry-on-tf-failure 3 \
                --break-kubetest-on-upfail true --powervs-memory 32 \
                --playbook k8s-node-remote.yml
              EXTERNAL_IP=`grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' $(pwd)/config3-$TIMESTAMP/hosts`
              kubetest2 tf --test=exec -- ssh -i /etc/secret-volume/ssh-privatekey root@$EXTERNAL_IP \
                "export SKIP='\[Flaky\]|\[Slow\]|\[Serial\]|Containers.Lifecycle.should|should.execute.readiness.probe.while.in.preStop' && /make-test-e2e-node.sh"; \
                rc=$?; scp -r -i /etc/secret-volume/ssh-privatekey root@$EXTERNAL_IP:/tmp/_artifacts $ARTIFACTS
              kubetest2 tf --powervs-region syd --powervs-zone syd05 \
                --powervs-service-id c3f5354a-517e-4927-8523-890c4bf3d6c5 \
                --ignore-cluster-dir true \
                --cluster-name config3-$TIMESTAMP \
                --down --auto-approve --ignore-destroy-errors
              [ $rc != 0 ] && echo "ERROR: E2ENode Test suite exited with code:$rc"; exit $rc
